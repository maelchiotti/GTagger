from ..utils import convert_to_datetime as convert_to_datetime
from .artist import Artist as Artist
from .base import BaseEntity as BaseEntity
from .song import Song as Song
from _typeshed import Incomplete

class Album(BaseEntity):
    artist: Incomplete
    tracks: Incomplete
    release_date_components: Incomplete
    api_path: Incomplete
    cover_art_thumbnail_url: Incomplete
    cover_art_url: Incomplete
    full_title: Incomplete
    name: Incomplete
    name_with_artist: Incomplete
    url: Incomplete
    def __init__(self, client, json_dict, tracks) -> None: ...
    def to_dict(self): ...
    def to_json(self, filename: Incomplete | None = ..., sanitize: bool = ..., ensure_ascii: bool = ...): ...
    def to_text(self, filename: Incomplete | None = ..., sanitize: bool = ...): ...
    def save_lyrics(self, filename: Incomplete | None = ..., extension: str = ..., overwrite: bool = ..., ensure_ascii: bool = ..., sanitize: bool = ..., verbose: bool = ...): ...

class Track(BaseEntity):
    song: Incomplete
    number: Incomplete
    def __init__(self, client, json_dict, lyrics) -> None: ...
    def to_dict(self): ...
    def to_json(self, filename: Incomplete | None = ..., sanitize: bool = ..., ensure_ascii: bool = ...): ...
    def to_text(self, filename: Incomplete | None = ..., sanitize: bool = ...): ...
    def save_lyrics(self, filename: Incomplete | None = ..., extension: str = ..., overwrite: bool = ..., ensure_ascii: bool = ..., sanitize: bool = ..., verbose: bool = ...): ...
