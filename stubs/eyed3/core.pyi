from . import LOCAL_FS_ENCODING as LOCAL_FS_ENCODING
from .utils.log import getLogger as getLogger
from _typeshed import Incomplete

log: Incomplete
AUDIO_NONE: int
AUDIO_MP3: int
AUDIO_TYPES: Incomplete
LP_TYPE: str
EP_TYPE: str
EP_MAX_SIZE_HINT: int
COMP_TYPE: str
LIVE_TYPE: str
VARIOUS_TYPE: str
DEMO_TYPE: str
SINGLE_TYPE: str
ALBUM_TYPE_IDS: Incomplete
VARIOUS_ARTISTS: str
TXXX_ALBUM_TYPE: str
TXXX_ARTIST_ORIGIN: str

class ArtistOrigin:
    city: str
    state: str
    country: str
    def __bool__(self): ...
    def id3Encode(self): ...
    def __init__(self, city, state, country) -> None: ...

class AudioInfo:
    time_secs: float
    size_bytes: int

class Tag:
    read_only: bool
    @property
    def artist(self): ...
    @artist.setter
    def artist(self, v) -> None: ...
    @property
    def album_artist(self): ...
    @album_artist.setter
    def album_artist(self, v) -> None: ...
    @property
    def album(self): ...
    @album.setter
    def album(self, v) -> None: ...
    @property
    def title(self): ...
    @title.setter
    def title(self, v) -> None: ...
    @property
    def track_num(self): ...
    @track_num.setter
    def track_num(self, v) -> None: ...
    def __init__(self, title: Incomplete | None = ..., artist: Incomplete | None = ..., album: Incomplete | None = ..., album_artist: Incomplete | None = ..., track_num: Incomplete | None = ...) -> None: ...

class AudioFile:
    def initTag(self, version: Incomplete | None = ...) -> None: ...
    def rename(self, name, fsencoding=..., preserve_file_time: bool = ...) -> None: ...
    @property
    def path(self): ...
    @path.setter
    def path(self, path) -> None: ...
    @property
    def info(self): ...
    @property
    def tag(self): ...
    @tag.setter
    def tag(self, t) -> None: ...
    type: Incomplete
    def __init__(self, path) -> None: ...

class Date:
    TIME_STAMP_FORMATS: Incomplete
    def __init__(self, year, month: Incomplete | None = ..., day: Incomplete | None = ..., hour: Incomplete | None = ..., minute: Incomplete | None = ..., second: Incomplete | None = ...) -> None: ...
    @property
    def year(self): ...
    @property
    def month(self): ...
    @property
    def day(self): ...
    @property
    def hour(self): ...
    @property
    def minute(self): ...
    @property
    def second(self): ...
    def __eq__(self, rhs): ...
    def __ne__(self, rhs): ...
    def __lt__(self, rhs): ...
    def __hash__(self): ...
    @staticmethod
    def parse(s): ...

def parseError(ex) -> None: ...
def load(path, tag_version: Incomplete | None = ...) -> AudioFile: ...
